/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_linkja_crypto_Library */

#ifndef _Included_org_linkja_crypto_Library
#define _Included_org_linkja_crypto_Library
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_linkja_crypto_Library
 * Method:    hash
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linkja_crypto_Library_hash
  (JNIEnv *, jclass, jstring);

/*
 * Class:     org_linkja_crypto_Library
 * Method:    createSecureHash
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linkja_crypto_Library_createSecureHash
  (JNIEnv *, jclass, jstring, jstring, jstring, jstring);

/*
 * Class:     org_linkja_crypto_Library
 * Method:    revertSecureHash
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linkja_crypto_Library_revertSecureHash
  (JNIEnv *, jclass, jstring, jstring, jstring, jstring);

/*
 * Class:     org_linkja_crypto_Library
 * Method:    generateToken
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linkja_crypto_Library_generateToken
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_linkja_crypto_Library
 * Method:    generateKey
 * Signature: (I)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_linkja_crypto_Library_generateKey
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_linkja_crypto_Library
 * Method:    generateIV
 * Signature: (I)[B
 */
JNIEXPORT jbyteArray JNICALL Java_org_linkja_crypto_Library_generateIV
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_linkja_crypto_Library
 * Method:    getLibrarySignature
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_linkja_crypto_Library_getLibrarySignature
  (JNIEnv *, jclass);

/*
 * Class:     org_linkja_crypto_Library
 * Method:    aesEncrypt
 * Signature: ([B[B[B[B)Lorg/linkja/crypto/AesResult;
 */
JNIEXPORT jobject JNICALL Java_org_linkja_crypto_Library_aesEncrypt
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     org_linkja_crypto_Library
 * Method:    aesDecrypt
 * Signature: ([B[B[B[B[B)Lorg/linkja/crypto/AesResult;
 */
JNIEXPORT jobject JNICALL Java_org_linkja_crypto_Library_aesDecrypt
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     org_linkja_crypto_Library
 * Method:    rsaEncrypt
 * Signature: ([B[B)Lorg/linkja/crypto/RsaResult;
 */
JNIEXPORT jobject JNICALL Java_org_linkja_crypto_Library_rsaEncrypt
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     org_linkja_crypto_Library
 * Method:    rsaDecrypt
 * Signature: ([B[B)Lorg/linkja/crypto/RsaResult;
 */
JNIEXPORT jobject JNICALL Java_org_linkja_crypto_Library_rsaDecrypt
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
